{"name":"Prelude","body":"## Prelude\r\n\r\nEmacs is probably the best text editor in the world. However, the\r\nprocess of coming up with a useful Emacs configuration is long and\r\ndifficult. It's this process that separates you from truly taking\r\nadvantage of Emacs's power. I like to refer to this process as the\r\n**Prelude**. The **Emacs Prelude** has the goal to ease the initial\r\nEmacs setup process and to provide you with a much more powerful and\r\nproductive experience than that you get out of the box. By using **Emacs\r\nPrelude** you're basically getting a \"Get me out of the Prelude, I\r\njust want to use Emacs\" card.\r\n\r\nEmacs Prelude is compatible **ONLY with GNU Emacs 24.x**. \r\n\r\n## Fast Forward\r\n\r\nAssuming you're using an Unix-like OS (`*BSD`, `GNU/Linux`, `OS X`, `Solaris`,\r\netc), you already have Emacs 24 installed, as well as `git` & `curl` you\r\ncan skip the whole manual and just type in your favorite shell the\r\nfollowing command:\r\n\r\n`curl -L https://github.com/bbatsov/prelude/raw/master/utils/installer.sh | sh`\r\n\r\nYou can now power up your Emacs, sit back and enjoy Prelude,\r\nforgetting about the rest of this manual.\r\n\r\nThere are two environment variables you can use to control the \r\nsource repository and the installation directory. To change the \r\ninstallation directory:\r\n\r\n`PRELUDE_INSTALL_DIR=\"$HOME/.emacs.d\" && \r\n curl -L\r\nhttps://github.com/bbatsov/prelude/raw/master/utils/installer.sh\r\n| sh`\r\n\r\nTo change the source repository:\r\n\r\n`PRELUDE_URL=\"https://github.com/yourname/prelude.git\" &&\r\n curl -L\r\nhttps://github.com/bbatsov/prelude/raw/master/utils/installer.sh\r\n| sh`\r\n\r\nNote that the installer will back up any existing `.emacs` file or\r\n`.emacs.d` since it will unpack Prelude's code in `.emacs.d`. If\r\nyou're doing a manual install make sure you don't have a `.emacs` file\r\nor back up your existing `.emacs.d` directory manually.\r\n\r\n## More goodies\r\n\r\nThe [Prelude Modules](https://github.com/bbatsov/prelude-modules)\r\nproject contains a lot of additional packages for Prelude\r\n(install-able via the `package-list-packages` command) - enhanced programming\r\nmode configs, latex config, erc config, etc.\r\n\r\n## Installing Emacs 24\r\n\r\nObviously to use the Emacs Prelude you have to install Emacs 24\r\nfirst. Have a look at the [WikEmacs articles on installing Emacs](http://wikemacs.org/wiki/Installing_Emacs).\r\n \r\n## Installation\r\n\r\n### Automated\r\n\r\nYou can install Emacs via the command line with either `curl` or\r\n`wget`. Naturally `git` is also required.\r\n\r\n#### Via Curl\r\n\r\nIf you're using `curl` type the following command:\r\n\r\n`curl -L https://github.com/bbatsov/prelude/raw/master/utils/installer.sh | sh`\r\n\r\n#### Via Wget\r\n\r\nIf you're using `wget` type:\r\n\r\n`wget --no-check-certificate https://github.com/bbatsov/prelude/raw/master/utils/installer.sh -O - | sh`\r\n\r\n### Manual\r\n\r\n```bash\r\n$ git clone git://github.com/bbatsov/prelude.git path/to/local/repo\r\n$ ln -s path/to/local/repo ~/.emacs.d\r\n$ cd ~/emacs.d\r\n```\r\n\r\nYou'd do well to replace `~/.emacs.d` with the value of\r\n`user-emacs-directory` for your OS. You can check the value by doing\r\n`C-h v user-emacs-directory` inside Emacs.\r\n\r\n## Running\r\n\r\nNothing fancy here. Just start Emacs as usual. Personally I run Emacs\r\nin daemon mode:\r\n\r\n`$ emacs --daemon`\r\n\r\nAfterwards I connect to the server with either a terminal or a GUI\r\nclient like this:\r\n\r\n```bash\r\n$ emacsclient -t\r\n$ emacsclient -c\r\n```\r\n\r\nYou'd probably do well to put a few aliases in your `.zshrc` (or\r\n`.bashrc`):\r\n\r\n```bash\r\nalias e=emacsclient -t\r\nalias ec=emacsclient -c\r\nalias vim=emacsclient -t\r\nalias vi=emacsclient -t\r\n```\r\n\r\nThe last two aliases are helpful if you're used to editing files from\r\nthe command line using `vi(m)`.\r\n\r\n## Getting to know Prelude\r\n\r\nCertainly the best way to understand how Prelude enhances the default\r\nEmacs experience is to peruse Prelude's source code (which is\r\nobviously written in Emacs Lisp). If you're intimidated by the source\r\n- do not despair. Prelude includes a `prelude-mode` minor Emacs mode\r\nwhich collects some of the additional functionality added by\r\nPrelude. It also adds an additional keymap that binds many of those\r\nextensions to keybindings.\r\n\r\n## Color Themes\r\n\r\nEmacs 24 ships with a new theming facility that effectively renders\r\nthe old color-theme package obsolete. Emacs 24 provides a dozen of\r\nbuilt-in themes you can use out-of-the-box by invoking the `M-x\r\nload-theme` command.\r\n\r\n[Zenburn](https://github.com/bbatsov/zenburn-emacs) is the default color theme in Prelude, but you can change it\r\nat your discretion. Why Zenburn? I (and lots of hackers around the\r\nworld) find it pretty neat for some reason. Personally I find the\r\ndefault theme pretty tiresome for the eyes, that's why I took that\r\n\"controversial\" decision to replace it. You can, of course, easily go\r\nback to the default (or select another theme entirely).\r\n\r\nTo disable Zenburn just put in your personal config the following\r\nline:\r\n\r\n```elisp\r\n(disable-theme 'zenburn)\r\n```\r\n\r\nOr you can use another theme altogether by adding something like:\r\n\r\n```elisp\r\n(load-theme 'solarized-dark t)\r\n```\r\n\r\nP.S. Solarized is not available by default - you'll have to install it from MELPA first.\r\n\r\n## Personalizing\r\n\r\nFork the official Prelude repo and add your own touch to it. You're advised to avoid changing stuff outside of the\r\npersonal folder to avoid having to deal with git merge conflicts in the future.\r\n\r\n## Prelude Modules\r\n\r\nAdditional settings for various programming languages are available for installation via MELPA. You might take a look at the [Prelude Modules project](https://github.com/bbatsov/prelude-modules) for further info.\r\n\r\n## Caveats & Pitfalls\r\n\r\n### Problems with flyspell-mode\r\n\r\nPrelude makes heavy use of the flyspell-mode package for spell\r\nchecking of various things. The proper operation of flyspell depends\r\non the presence of the `aspell` program and an `en` dictionary on your\r\nsystem. You can install `aspell` and the dictionary on OS X with\r\n`homebrew` like this:\r\n\r\n```bash\r\n$ brew install aspell --lang=en\r\n```\r\n\r\nOn Linux distros - just use your distro's package manager.\r\n\r\n### Ugly colors in the terminal Emacs version\r\n\r\nIf your Emacs looks considerably uglier in a terminal (compared to the\r\nGUI version) try adding this to your `.bashrc` or `.zshrc`:\r\n\r\n```bash\r\nexport TERM=xterm-256color\r\n```\r\n\r\nSource the `.bashrc` file and start Emacs again.\r\n\r\n### MELPA error on initial startup\r\n\r\nIf you get some http connection error related to the MELPA repo\r\njust do a manual `M-x package-refresh-contents` and restart Emacs\r\nafterwards. \r\n\r\n### No arrow navigation in editor buffers\r\n\r\nThis is not a bug - it's a feature! I firmly believe that the one true\r\nway to use Emacs is by using it the way it was intended to be used (as\r\nfar as navigation is concerned at least). That's why I've disabled all\r\nmovement commands with arrows (and keys like page up, page down, etc) - to prevent you from being tempted to\r\nuse them.\r\n\r\nIf you'd still like to use the arrow keys just invoke `M-x\r\nguru-mode` to enable them for the duration of your\r\ncurrent Emacs session or add `(guru-mode -1)` to your\r\npersonal Emacs customization to enable them permanently.\r\n\r\n### Windows compatibility\r\n\r\nWhile everything in Prelude should work fine in Windows, I test it only\r\nwith Linux & OSX, so there are Windows related problems from time to\r\ntime. This situation will probably improve over time.\r\n\r\n## Share the knowledge\r\n\r\n[WikEmacs](http://wikemacs.org) collects useful resources for working\r\nwith GNU Emacs. Please, take the time to peruse and improve them as\r\nyou accumulate knowledge about Emacs. Prelude makes this especially\r\neasy, since it bundles\r\n[MediaWiki support](http://wikemacs.org/wiki/Mediawiki.el) + the\r\nsettings required to access WikEmacs right away.\r\n\r\n## Known issues\r\n\r\nCheck out the project's\r\n[issue list](https://github.com/bbatsov/prelude/issues?sort=created&direction=desc&state=open)\r\na list of unresolved issues. By the way - feel free to fix any of them\r\nand sent me a pull request. :-)\r\n\r\n## Contributors\r\n\r\nHere's a [list](https://github.com/bbatsov/prelude/contributors) of all the people who have contributed to the\r\ndevelopment of Emacs Prelude.\r\n\r\n## Bugs & Improvements\r\n\r\nBug reports and suggestions for improvements are always\r\nwelcome. github pull requests are even better! :-)\r\n\r\nCheers,<br>\r\nBozhidar\r\n","google":"UA-30626419-1","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Prelude is an enhanced Emacs configuration that should make your experience with Emacs both more pleasant and more powerful."}